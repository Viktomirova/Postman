{
	"info": {
		"_postman_id": "2607bb08-337e-45ae-9802-af0d694d8a15",
		"name": "GitHub_Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20930871"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "Get_SingleIssue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let body = pm.response.json();\r",
									"let number = body.number;\r",
									"\r",
									"pm.test(\"Check status code\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check status code other way\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check Status\", function(){\r",
									"    pm.expect(pm.response.status).to.equal(\"OK\")\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue number\", function(){\r",
									"    pm.expect(body.number, \"Number property\").to.be.greaterThan(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue url\", function(){\r",
									"    let url = \"https://api.github.com/repos/Viktomirova/Postman/issues/\" + number;\r",
									"    pm.expect(body.url, \"Url property\").to.equal(url);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues/2",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_AllIssues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var body = pm.response.json();\r",
									"\r",
									"pm.test(\"Check body length\", function() {\r",
									"    pm.expect(body.length).be.greaterThan(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Check body name\", function() {\r",
									"    pm.expect(body[0].title).to.include(\"Postman\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check body including\", function() {\r",
									"    var labeles = body[3].labels;\r",
									"    console.log(labeles);\r",
									"    //pm.expect(labeles[0]).to.equal(\"bug\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "Create_Issue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let body = pm.response.json();\r",
									"let number = body.number;\r",
									"\r",
									"pm.test(\"Check status code\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Check status code other way\", () => {\r",
									"    pm.response.to.have.status(201)\r",
									"});\r",
									"\r",
									"pm.test(\"Check Status\", function(){\r",
									"    pm.expect(pm.response.status).to.equal(\"Created\")\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue number\", function(){\r",
									"    pm.expect(body.number, \"Number property\").to.be.greaterThan(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue url\", function(){\r",
									"    let url = \"https://api.github.com/repos/Viktomirova/Postman/issues/\" + number;\r",
									"    pm.expect(body.url, \"Url property\").to.equal(url);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{user}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"title\" : \"Postman For UI\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "UPDATE",
			"item": [
				{
					"name": "Update_Issue3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let body = pm.response.json();\r",
									"let labels = pm.response.json();\r",
									"\r",
									"pm.test(\"Check status\", () => {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{user}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"labels\" : [\"bug\", \"Importance:high\", \"type:UI\"]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues/3",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues",
								"3"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "Delete_Issue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status\", () => {\r",
									"    pm.response.to.have.status(\"Not Found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{user}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues/2",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues",
								"2"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "User",
			"value": "user_name"
		},
		{
			"key": "Repo",
			"value": "repo_name"
		}
	]
}
